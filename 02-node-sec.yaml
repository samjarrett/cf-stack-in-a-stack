AWSTemplateFormatVersion: '2010-09-09'

Description: An AWS CloudFormation template to create EC2 roles and security groups.

Parameters:
  ManagementIngressCidrIp:
    Type: String
    Description: Specifies the CIDR/IP range for SSH access - defaults to no access
    Default: ''
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC to place the stack in

Conditions:
  CreateManagementAccess:
    !Not [!Equals [!Ref ManagementIngressCidrIp, '']]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the EC2 instances
      VpcId: !Ref VPCId

  SecurityGroupIngressSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CreateManagementAccess
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref ManagementIngressCidrIp

  SecurityGroupIngressICMP:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CreateManagementAccess
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: icmp
      FromPort: '-1'
      ToPort: '-1'
      CidrIp: !Ref ManagementIngressCidrIp


  SecurityGroupIngressHttp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0

  SecurityGroupIngressALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 9000
      ToPort: 9000
      SourceSecurityGroupId: !Ref SecurityGroup

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: ec2.amazonaws.com }
            Action: sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTelemetrySession
                  - ecs:UpdateContainerInstancesState
                  - ecs:Submit*
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
        - !Ref InstanceRole

Outputs:
  SecurityGroup:
    Description: The Security Group for our ECS cluster
    Value: !Ref SecurityGroup

  InstanceProfile:
    Description: EC2 instance profile
    Value: !Ref InstanceProfile
